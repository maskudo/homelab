apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich
  namespace: apps
  labels:
    app: immich
spec:
  selector:
    matchLabels:
      app: immich
  replicas: 1
  template:
    metadata:
      labels:
        app: immich
    spec:
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 0
      containers:
        - name: immich
          image: ghcr.io/immich-app/immich-server:release
          ports:
            - containerPort: 2283
              name: default
          volumeMounts:
            - name: photos
              mountPath: /usr/src/app/upload
            - name: localtime
              mountPath: /etc/localtime
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_DATABASE_NAME
            - name: IMMICH_PORT
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: IMMICH_PORT
            - name: DB_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_HOSTNAME
            - name: REDIS_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: REDIS_HOSTNAME
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: photos
          nfs:
            server: 192.168.1.67
            path: /media/Photos
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-redis
  namespace: apps
  labels:
    app: immich-redis
spec:
  selector:
    matchLabels:
      app: immich-redis
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: immich-redis
      labels:
        app: immich-redis
    spec:
      containers:
        - name: immich-redis
          image: redis:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: immich-redis
          volumeMounts:
            - mountPath: /data
              name: immich-redis
      volumes:
        - name: immich-redis
          persistentVolumeClaim:
            claimName: immich-redis
      restartPolicy: Always

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: immich-postgres
  labels:
    app: immich-postgres
spec:
  serviceName: immich-postgres
  replicas: 1
  selector:
    matchLabels:
      app: immich-postgres
  template:
    metadata:
      labels:
        app: immich-postgres
    spec:
      containers:
        - image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0
          name: immich-postgres
          ports:
            - containerPort: 5432
              name: immich-pg
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: DB_DATABASE_NAME
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: immich-postgres
      volumes:
        - name: immich-postgres
          persistentVolumeClaim:
            claimName: immich-postgres
